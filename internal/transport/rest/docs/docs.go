// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dummyLogin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Default"
                ],
                "summary": "Получение тестового токена",
                "parameters": [
                    {
                        "description": "Данные для входа (role и user_id)",
                        "name": "dummyLoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DummyLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная генерация токена",
                        "schema": {
                            "$ref": "#/definitions/handlers.DummyLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешён",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Default"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Неверный email или пароль",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешён",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Добавляет новый товар в текущую открытую приемку для указанного ПВЗ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Default"
                ],
                "summary": "Добавление товара в текущую приемку (только для сотрудников ПВЗ)",
                "parameters": [
                    {
                        "description": "Данные товара",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Товар успешно добавлен",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Нет открытой приемки для указанного ПВЗ",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешен",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pvz": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает новый пункт выдачи заказов в указанном городе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Default"
                ],
                "summary": "Создание ПВЗ (только для модераторов)",
                "parameters": [
                    {
                        "description": "Данные для создания ПВЗ",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PVZRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ПВЗ успешно создан",
                        "schema": {
                            "$ref": "#/definitions/handlers.PVZResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешен",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pvz/{pvzId}/delete_last_product": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет самый последний добавленный товар (LIFO) (по дате) из открытой приемки указанного ПВЗ",
                "tags": [
                    "Default"
                ],
                "summary": "Удаление последнего добавленного товара из текущей приемки (LIFO, только для сотрудников ПВЗ)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пункта выдачи заказов (ПВЗ)",
                        "name": "pvzId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Товар успешно удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный путь запроса",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Не найдено: либо нет открытой приемки, либо нет товаров для удаления",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешен",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/receptions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает новую приемку товаров для указанного ПВЗ. Требуется, чтобы предыдущая приемка была закрыта.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Default"
                ],
                "summary": "Создание новой приемки товаров (только для сотрудников ПВЗ)",
                "parameters": [
                    {
                        "description": "Данные для создания приемки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ReceptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Приемка успешно создана",
                        "schema": {
                            "$ref": "#/definitions/handlers.ReceptionResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Неверный PVZ ID или предыдущая приемка не закрыта",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешен",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Default"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос или валидация",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешён",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email уже зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.DummyLoginRequest": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "example": "moderator"
                }
            }
        },
        "handlers.DummyLoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "handlers.PVZRequest": {
            "type": "object",
            "required": [
                "city"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "enum": [
                        "Москва",
                        "Санкт-Петербург",
                        "Казань"
                    ],
                    "example": "Москва"
                }
            }
        },
        "handlers.PVZResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Москва"
                },
                "id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "registrationDate": {
                    "type": "string",
                    "example": "2025-07-15T13:39:10.268Z"
                }
            }
        },
        "handlers.ProductRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "pvzId": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "электроника",
                        "одежда",
                        "обувь"
                    ],
                    "example": "электроника"
                }
            }
        },
        "handlers.ProductResponse": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "dateTime": {
                    "type": "string",
                    "example": "2025-07-15T18:55:28.164Z"
                },
                "id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "receptionId": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "электроника",
                        "одежда",
                        "обувь"
                    ],
                    "example": "in_progress"
                }
            }
        },
        "handlers.ReceptionRequest": {
            "type": "object",
            "properties": {
                "pvzId": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                }
            }
        },
        "handlers.ReceptionResponse": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "dateTime": {
                    "type": "string",
                    "example": "2025-07-15T18:55:28.164Z"
                },
                "id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "pvzId": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "close"
                    ],
                    "example": "in_progress"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "strongpassword123"
                },
                "role": {
                    "type": "string",
                    "example": "employee"
                }
            }
        },
        "handlers.RegisterResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "uuid-or-id"
                },
                "role": {
                    "type": "string",
                    "example": "employee"
                }
            }
        },
        "helpers.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT авторизация с Bearer схемой",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "backend service",
	Description:      "Сервис для управления ПВЗ и приемкой товаров",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
