// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dummyLogin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Генерация JWT токена для тестового входа",
                "parameters": [
                    {
                        "description": "Данные для входа (role и user_id)",
                        "name": "dummyLoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DummyLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная генерация токена",
                        "schema": {
                            "$ref": "#/definitions/handlers.DummyLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешён",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Неверный email или пароль",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешён",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос или валидация",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешён",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email уже зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.DummyLoginRequest": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "example": "moderator"
                },
                "user_id": {
                    "type": "string",
                    "example": "12345"
                }
            }
        },
        "handlers.DummyLoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "strongpassword123"
                },
                "role": {
                    "type": "string",
                    "example": "employee"
                }
            }
        },
        "handlers.RegisterResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "uuid-or-id"
                },
                "role": {
                    "type": "string",
                    "example": "employee"
                }
            }
        },
        "helpers.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerAuth": {
            "description": "JWT авторизация с Bearer схемой",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "backend service",
	Description:      "Сервис для управления ПВЗ и приемкой товаров",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
