openapi: 3.0.0
info:
  title: backend service
  description: Сервис для управления ПВЗ и приемкой товаров
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local server

components:
  schemas:
    TokenResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJ.IUzI1NiIsInR5c.CI6IkpXVCJ9...
      required:
        - token
    
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        role:
          type: string
          enum: [employee, moderator]
      required: [email, role]

    PVZ_Request:
      type: object
      properties:
        city:
          type: string
          enum: [Moscow, Saint Petersburg, Kazan]
      required: [city]

    PVZ:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        registrationDate:
          type: string
          format: date-time
          example: "2025-07-17T12:15:49.386Z"
        city:
          type: string
          enum: [Moscow, Saint Petersburg, Kazan]
      required: [id, registrationDate, city]

    Reception:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        dateTime:
          type: string
          format: date-time
          example: "2025-07-17T12:15:49.386Z"
        pvzId:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        status:
          type: string
          enum: [in_progress, close]
          example: in_progress
      required: [id, dateTime, pvzId, status]

    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        dateTime:
          type: string
          format: date-time
          example: "2025-07-17T12:15:49.386Z"
        type:
          type: string
          enum: [electronics, clothes, shoes]
          example: electronics
        receptionId:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      required: [id, dateTime, type, receptionId]

    PVZWithReceptions:
      type: object
      properties:
        pvz:
          $ref: '#/components/schemas/PVZ'
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/ReceptionWithProducts'
      required: [pvz, receptions]

    ReceptionWithProducts:
      type: object
      properties:
        reception:
          $ref: '#/components/schemas/Reception'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
      required: [reception, products]

    PVZListResponse:
      type: array
      items:
        $ref: '#/components/schemas/PVZWithReceptions'

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error description"
      required: [message]

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /dummyLogin:
    post:
      tags: [Authentication]
      summary: Получение тестового токена
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: [employee, moderator]
                  example: employee
              required: [role]
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /register:
    post:
      tags: [Authentication]
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: securePassword123
                role:
                  type: string
                  enum: [employee, moderator]
                  example: employee
              required: [email, password, role]
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      tags: [Authentication]
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: securePassword123
              required: [email, password]
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pvz:
    post:
      tags: [PVZ]
      summary: Создание ПВЗ (только для модераторов)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PVZ_Request'
      responses:
        '201':
          description: ПВЗ создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PVZ'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags: [PVZ]
      summary: Получение списка ПВЗ с фильтрацией по дате приемки и пагинацией
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Начальная дата диапазона
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-01-01T00:00:00Z"
        - name: endDate
          in: query
          description: Конечная дата диапазона
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-12-31T23:59:59Z"
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
            example: 1
        - name: limit
          in: query
          description: Количество элементов на странице
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 30
            default: 10
            example: 10
      responses:
        '200':
          description: Список ПВЗ с приёмками и товарами
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PVZListResponse'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pvz/{pvzId}/close_last_reception:
    post:
      tags: [Receptions]
      summary: Закрытие последней открытой приемки товаров в рамках ПВЗ
      security:
        - bearerAuth: []
      parameters:
        - name: pvzId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: Приемка закрыта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reception'
        '400':
          description: Неверный запрос или приемка уже закрыта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pvz/{pvzId}/delete_last_product:
    post:
      tags: [Products]
      summary: Удаление последнего добавленного товара из текущей приемки (LIFO, только для сотрудников ПВЗ)
      security:
        - bearerAuth: []
      parameters:
        - name: pvzId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: Товар удален
        '400':
          description: Неверный запрос, нет активной приемки или нет товаров для удаления
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /receptions:
    post:
      tags: [Receptions]
      summary: Создание новой приемки товаров (только для сотрудников ПВЗ)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pvzId:
                  type: string
                  format: uuid
                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              required: [pvzId]
      responses:
        '201':
          description: Приемка создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reception'
        '400':
          description: Неверный запрос или есть незакрытая приемка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products:
    post:
      tags: [Products]
      summary: Добавление товара в текущую приемку (только для сотрудников ПВЗ)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [electronics, clothes, shoes]
                  example: electronics
                pvzId:
                  type: string
                  format: uuid
                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              required: [type, pvzId]
      responses:
        '201':
          description: Товар добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Неверный запрос или нет активной приемки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'